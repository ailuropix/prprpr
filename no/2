mergeSort(arr, left, right)
if left < right
mid = left + (right - left) / 2
mergeSort(arr, left, mid)
mergeSort(arr, mid + 1, right)
merge(arr, left, mid, right)
merge(arr, left, mid, right)
n1 = mid - left + 1
n2 = right - mid
L[n1], R[n2]
for i = 0; i < n1; i++
L[i] = arr[left + i]
for j = 0; j < n2; j++
R[j] = arr[mid + 1 + j]
i = j = 0
for k = left; i < n1 and j < n2; k++
arr[k] = (L[i] <= R[j]) ? L[i++] : R[j++]
while i < n1
arr[k++] = L[i++]
while j < n2
arr[k++] = R[j++]
printArray(A[], size)
for i = 0; i < size; i++
print A[i], " "
print a newline
main()
arr_size
print "Enter the size of the array: "
input arr_size
int arr[arr_size]
print "Enter arr_size elements:"
for i = 0; i < arr_size; i++
input arr[i]
print "Given array is"
printArray(arr, arr_size)
mergeSort(arr, 0, arr_size - 1)
print "Sorted array is"
printArray(arr, arr_size)
